{"version":3,"sources":["Tuesday/ToDoList/ToDoListFooter/ToDoListFooter.module.css","NavMenu/NavMenu.module.css","Monday/Monday.module.css","Monday/MySkills/MySkills.module.css","Monday/HelloComponent/Hello.module.css","Monday/HelloComponent/InputComponent/InputComponent.module.css","Monday/MyName/MyName.module.css","Monday/HelloComponent/ListOfFriends/ListOfFriends.module.css","Monday/HelloComponent/PushButton/PushButton.module.css","Tuesday/Tuesday.module.css","Tuesday/ToDoList/ToDoList.module.css","Tuesday/ToDoList/ToDoListHeader/ToDoListHeader.module.css","Tuesday/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.module.css","NavMenu/NavMenu.tsx","Monday/MyName/MyName.tsx","Monday/MySkills/MySkills.tsx","Monday/HelloComponent/ListOfFriends/ListOfFriends.tsx","Monday/HelloComponent/PushButton/PushButton.tsx","Monday/HelloComponent/InputComponent/InputComponent.tsx","Monday/HelloComponent/Hello.tsx","Monday/Monday.tsx","Tuesday/ToDoList/ToDoListHeader/ToDoListHeader.tsx","Tuesday/ToDoList/ToDoListFooter/ToDoListFooter.tsx","Tuesday/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.tsx","Tuesday/ToDoList/ToDoListTasks/ToDoListTasks.tsx","restoreState.js","Tuesday/ToDoList/ToDoList.tsx","Tuesday/Tuesday.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavMenu","state","days","id","isHidden","onClickColor","key","setState","render","links","map","i","href","onClick","className","styles","active","undefined","nav","React","Component","MyName","nameMas","colorMas","printMyName","myName","onMouseOver","c","style","color","Math","floor","random","length","MySkills","mySkills","props","item","skill","ListOfFriends","list","name","PushButton","onClickButton","button","InputComponent","error","title","onEnterPress","e","addNameFunc","newTitle","onEnterPush","onKeyPress","type","placeholder","onChange","currentTarget","value","inputError","input","setF","Hello","titleRef","createRef","names","f","onButtonClick","newName","alert","newMas","writeMyFriends","index","wrapper","friends","Monday","link","App","Name","ToDoListHeader","addTaskClick","newText","addTask","onPressEnterAddTask","ToDoListFooter","classForAll","filterValue","filterActive","classForCompleted","classForActive","changeFilter","TodoListTask","editMode","activatedEditMode","deactivatedEditMode","onIsDoneChanged","changeStatus","checked","onTitleChanged","changeTitle","task","isDone","toDoListTaskDone","autoFocus","onBlur","priority","removeTask","ToDoListTasks","tasksElements","tasks","RestoreState","stateAsString","localStorage","getItem","JSON","parse","ToDoList","nextTaskId","newTaskTitle","newTask","newTasks","saveState","newFilterValue","changeS","taskId","t","newList","filter","stringify","setItem","LocalStr","this","forEach","Tuesday","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.02016b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"ToDoListFooter_filterActive__3AYpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__7l-PX\",\"active\":\"NavMenu_active__dvDC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Monday_App__Qa8vm\",\"Name\":\"Monday_Name__3_jhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySkills\":\"MySkills_mySkills__2QL7I\",\"skill\":\"MySkills_skill__ac7rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Hello_wrapper__1695F\",\"friends\":\"Hello_friends__U8Cgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputComponent_input__3sYg5\",\"inputError\":\"InputComponent_inputError__1QMeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myName\":\"MyName_myName__2h04n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListOfFriends_list__yzDuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PushButton_button__1wUoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Tuesday_App__1TQct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ToDoList_wrapper__1bKnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ToDoListHeader_error__2waPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoListTaskDone\":\"ToDoListTask_toDoListTaskDone__2QLLJ\"};","import React from 'react';\nimport styles from './NavMenu.module.css';\n\nclass NavMenu extends React.Component {\n    state = {\n        days: ['Mon', 'Tue'],\n        id: 0,\n        isHidden: true,\n    };\n\n    onClickColor = (key: number) => {\n        this.setState({\n            id: key\n        })\n    };\n\n    render = () => {\n\n        let links = this.state.days.map((i, key) => {\n            return (\n                <a\n                    key={key}\n                    href={\"#/\" + i}\n                    onClick={() => this.onClickColor(key)}\n                    className={this.state.id === key ? styles.active : undefined}\n                >{i}</a>\n            )\n        });\n        return (\n            <div className={styles.nav}>\n                {!this.state.isHidden && <button onClick={()=>{this.setState({isHidden:true})}} >Days</button>}\n                {this.state.isHidden && <button onClick={()=>{this.setState({isHidden:false})}} >Hide</button>}\n                {this.state.isHidden && links}\n            </div>\n        );\n    }\n}\n\nexport default NavMenu;\n","import React from 'react';\nimport styles from './MyName.module.css';\n\nclass MyName extends React.Component {\n    nameMas = [\"Г\", \"а\", \"в\", \"р\", \"и\", \"л\", \"е\", \"н\", \"к\", \"о\", \" \", \"А\", \"н\", \"т\", \"о\", \"н\",];\n    colorMas = [\"red\", \"orange\", \"violet\", \"green\", \"blue\", \"purple\"];\n    printMyName = () => {\n        this.setState({});\n    };\n\n    render = () => {\n        return (\n            <div className={styles.myName}>Дароу, я\n                <p onMouseOver={this.printMyName}>\n                    {this.nameMas.map((c, i) => (\n                        <span\n                            key={i}\n                            style={{color: this.colorMas[Math.floor(Math.random() * this.colorMas.length)]}}\n                        >\n                            {c}\n                        </span>\n                    ))}\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default MyName;\n","import React from 'react';\nimport styles from './MySkills.module.css';\n\ninterface IProps {\n    mySkills: Array<object>\n}\n\nclass MySkills extends React.Component<IProps> {\n    mySkills = this.props.mySkills.map((item: any, i) => {\n        return (\n            <div className={styles.skill}\n                 key={i}\n            >\n                {item.skill}\n            </div>\n        )\n    });\n    render = () => {\n\n        return (\n            <div className={styles.mySkills}>\n                {this.mySkills}\n            </div>\n        );\n    }\n}\n\nexport default MySkills;\n","import React from 'react';\nimport styles from './ListOfFriends.module.css';\n\ninterface IProps {\n    name: string\n}\n\nclass ListOfFriends extends React.Component<IProps> {\n\n    render = () => {\n        return (\n            <span className={styles.list}>\n                {this.props.name}\n            </span>\n        );\n    }\n}\n\nexport default ListOfFriends;\n","import React from 'react';\nimport styles from './PushButton.module.css';\n\ninterface IProps {\n    onClickButton: any\n}\n\nclass PushButton extends React.Component<IProps> {\n\n    render = () => {\n        return (\n            <button onClick={this.props.onClickButton} className={styles.button}>Push</button>\n        );\n    }\n}\n\nexport default PushButton;\n","import React from 'react';\nimport styles from './InputComponent.module.css';\n\ninterface IProps {\n    titleRef: any,\n    onEnterPush: any,\n    setF: (f: () => void) => void\n}\n\nclass InputComponent extends React.Component<IProps> {\n    constructor(props: IProps) {\n        super(props);\n        props.setF(this.addNameFunc)\n    }\n    state = {\n        error: false,\n        title: \"\",\n    };\n\n    onEnterPress = (e: any) => {\n        if (e.key === \"Enter\") {\n            this.addNameFunc();\n        }\n    };\n\n    addNameFunc = () => {\n        let newTitle = this.state.title;\n        this.setState({title: \"\"});\n        if (this.state.title === \"\") {\n            this.setState({error: true})\n        } else {\n            this.setState({error: false})\n            this.props.onEnterPush(newTitle)\n        }\n    }\n\n    render = () => {\n        return (\n            <input\n                onKeyPress={this.onEnterPress}\n                type=\"text\"\n                placeholder=\"Введи свое имя\"\n                onChange={(e) => {\n                    this.setState({error: false, title: e.currentTarget.value})\n                }}\n                className={this.state.error ? styles.inputError : styles.input}\n\n            />\n        );\n    }\n}\n\nexport default InputComponent;\n","import React from 'react';\nimport styles from './Hello.module.css';\nimport ListOfFriends from \"./ListOfFriends/ListOfFriends\";\nimport PushButton from \"./PushButton/PushButton\";\nimport InputComponent from \"./InputComponent/InputComponent\";\n\nclass Hello extends React.Component {\n    titleRef = React.createRef<HTMLInputElement>();\n    state = {\n        names: [],\n        f: () => {}\n\n    };\n    onButtonClick = (newName: any) => {\n        // let inputValue: string = this.titleRef.current ? this.titleRef.current.value : '';\n        // if (this.titleRef.current) this.titleRef.current.value = '';\n        if (newName === '') {\n            alert(\"Бро, введи имя\");\n        } else {\n            alert(\"Дароу, \" + newName);\n            let newNameBro: object = {name: newName};\n            let newMas = [newNameBro, ...this.state.names];\n            this.setState({names: newMas});\n        }\n    };\n\n    setF = (f: () => void) =>{this.setState({f})};\n\n    render = () => {\n        let writeMyFriends = this.state.names.map((i: any, index: number) => {\n            return <div>К нам присоединился: <ListOfFriends name={i.name} key={index}/></div>\n        });\n\n        return (\n            <div className={styles.wrapper}>\n                <div>\n                    <InputComponent titleRef={this.titleRef} onEnterPush={this.onButtonClick} setF={this.setF}/>\n                    <PushButton onClickButton={this.state.f}/>\n                </div>\n                <div className={styles.friends}>\n                    {writeMyFriends}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Hello;\n","import React from 'react';\nimport styles from './Monday.module.css';\nimport MyName from \"./MyName/MyName\";\nimport MySkills from \"./MySkills/MySkills\";\nimport Hello from \"./HelloComponent/Hello\";\n\ninterface IProps {\nmySkills: any\n}\n\nclass Monday extends React.Component<IProps> {\nstate={\n    link: \"\"\n}\n    render = () => {\n\n        return (\n            <div className={styles.App}>\n                <div className={styles.Name}>\n                    <MyName/>\n                </div>\n                <MySkills mySkills={this.props.mySkills}/>\n                <Hello/>\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n","import React from 'react';\nimport styles from './ToDoListHeader.module.css';\n\ninterface IProps {\n    addTask: any;\n}\n\nclass ToDoListHeader extends React.Component<IProps> {\n\n    state = {\n        error: false,\n        title: \"\",\n    };\n\n    addTaskClick = () => {\n        let newText = this.state.title;\n        this.setState({title: \"\"});\n        if (newText === \"\") {\n            this.setState({error: true})\n        } else {\n            this.setState({error: false})\n            this.props.addTask(newText)\n        }\n    };\n\n    onPressEnterAddTask = (e: any) => {\n        if (e.key === \"Enter\") {\n            this.addTaskClick();\n        }\n    };\n    render = () => {\n        return (\n            <div>\n                <div>\n                    <h3>Список дел:</h3>\n                    <div>\n                        <input onKeyPress={this.onPressEnterAddTask}\n                               onChange={(e) => {\n                                   this.setState({error: false, title: e.currentTarget.value})\n                               }}\n                               className={this.state.error ? styles.error : \"\"}\n                               type=\"text\"\n                               placeholder=\"Че будем делать?\"\n                               value={this.state.title}\n                        />\n                        <button onClick={this.addTaskClick}>Add</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoListHeader;\n","import React from 'react';\nimport styles from './ToDoListFooter.module.css';\n\ninterface IProps {\nfilterValue: string;\nchangeFilter: any;\n}\n\nclass ToDoListFooter extends React.Component<IProps> {\n\n    state = {\n        isHidden: true,\n    };\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? styles.filterActive : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? styles.filterActive : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? styles.filterActive : \"\";\n\n        return (\n            <div>\n                <div className=\"todoList\">\n                    <div className=\"todoList-footer\">\n                        {!this.state.isHidden &&  <div>\n                            <button className={classForAll} onClick={() => {\n                                this.props.changeFilter(\"All\")\n                            }}>All\n                            </button>\n                            <button className={classForCompleted} onClick={() => {\n                                this.props.changeFilter(\"Completed\")\n                            }}>Completed\n                            </button>\n                            <button className={classForActive} onClick={() => {\n                                this.props.changeFilter(\"Active\")\n                            }}>Active\n                            </button>\n                        </div>}\n                        {!this.state.isHidden && <span onClick={()=>{this.setState({isHidden: true})}}>Hide</span>}\n                        {this.state.isHidden && <span onClick={()=>{this.setState({isHidden: false})}}>Show</span>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoListFooter;\n","import React from 'react';\nimport styles from './ToDoListTask.module.css';\n\ninterface IProps {\n    id: number;\n    title: string;\n    isDone: boolean;\n    priority: string;\n    task: any;\n    changeStatus: any;\n    changeTitle: any;\n    removeTask: any;\n}\n\nclass TodoListTask extends React.Component<IProps> {\n\n    state = {\n        editMode: false\n    };\n\n    activatedEditMode = () => {\n        this.setState({editMode: true})\n    };\n    deactivatedEditMode = () => {\n        this.setState({editMode: false})\n    };\n\n    onIsDoneChanged = (e: any) => {\n        this.props.changeStatus(this.props.id, e.currentTarget.checked)\n\n    };\n    onTitleChanged = (e: any) => {\n        this.props.changeTitle(this.props.id, e.currentTarget.value)\n    };\n\n    render = () => {\n        return (\n            <div className={this.props.task.isDone ? styles.toDoListTaskDone : \"\"}>\n\n                <input type=\"checkbox\"\n                       checked={this.props.task.isDone}\n                       onChange={this.onIsDoneChanged}\n                />\n                <span>{this.props.id} - </span>\n                {this.state.editMode\n                    ? <input\n                        onChange={this.onTitleChanged}\n                        autoFocus={true}\n                        value={this.props.task.title}\n                        onBlur={this.deactivatedEditMode}\n                    />\n                    : <span onClick={this.activatedEditMode}>{this.props.title} priority: {this.props.priority}</span>\n                }\n                <button onClick={()=>{this.props.removeTask(this.props.id)}}>X</button>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport TodoListTask from \"./ToDoListTask/ToDoListTask\";\n// import styles from './ToDoList.module.css';\n\ninterface IProps {\n    changeTitle: any;\n    changeStatus: any;\n    changeS: any;\n    tasks: Array<string>;\n    removeTask: any;\n}\n\nclass ToDoListTasks extends React.Component<IProps> {\n\n    render = () => {\n        let tasksElements = this.props.tasks.map((item: any) => {\n            return (\n                <TodoListTask task={item}\n                              id={item.id}\n                              title={item.title}\n                              isDone={item.isDone}\n                              priority={item.priority}\n                              changeStatus={this.props.changeStatus}\n                              changeTitle={this.props.changeTitle}\n                              removeTask={this.props.removeTask}\n                />\n            )\n        });\n        return (\n            <div>\n                {tasksElements}\n            </div>\n        );\n    }\n}\n\nexport default ToDoListTasks;\n\n","import React from \"react\";\r\n\r\nconst RestoreState =\r\n     ()=> {\r\n         let state = {\r\n             tasks: [],\r\n             filterValue: \"All\"\r\n         };\r\n         let stateAsString = localStorage.getItem(\"ourState\");\r\n         if (stateAsString != null) {\r\n             state = JSON.parse(stateAsString);\r\n         }\r\n       return state;\r\n\r\n     };\r\n export default RestoreState;","import React from 'react';\nimport styles from './ToDoList.module.css';\nimport ToDoListHeader from \"./ToDoListHeader/ToDoListHeader\";\nimport ToDoListFooter from \"./ToDoListFooter/ToDoListFooter\";\nimport ToDoListTasks from \"./ToDoListTasks/ToDoListTasks\";\nimport RestoreState from \"../../restoreState\";\n\nclass ToDoList extends React.Component {\n\n    componentDidMount() {\n        let LocalStr: any = RestoreState;\n        this.setState(LocalStr, () => {\n            this.state.tasks.forEach((t: any) => {\n                if (t.id >= this.nextTaskId) {\n                    this.nextTaskId = t.id + 1\n                }\n            })\n        })\n    };\n\n    nextTaskId = 1;\n\n    state = {\n        tasks: [] as any,\n        filterValue: \"All\"\n    };\n\n    addTask = (newTaskTitle: string) => {\n        let newTask = {\n            id: this.nextTaskId,\n            title: newTaskTitle,\n            isDone: false,\n            priority: 'low'\n        };\n        this.nextTaskId++;\n        let newTasks = [newTask, ...this.state.tasks];\n        this.setState({\n            tasks: newTasks\n        }, this.saveState);\n    };\n\n    changeFilter = (newFilterValue: string) => {\n        this.setState({\n            filterValue: newFilterValue\n        })\n    };\n\n    changeS = (taskId: number, value: object) => {\n        let newTask = this.state.tasks.map((t: any) => {\n            if (t.id === taskId) {\n                return {...t, ...value};\n            } else {\n                return t\n            }\n        });\n        this.setState({\n            tasks: newTask\n        }, this.saveState)\n    };\n\n    removeTask = (taskId: number) => {\n        let newList = this.state.tasks.filter((t: any) => t.id !== taskId)\n        this.setState({tasks: newList}, this.saveState)\n    };\n\n    changeStatus = (taskId: number, isDone: object) => {\n        this.changeS(taskId, {isDone: isDone})\n    };\n    changeTitle = (taskId: number, title: object) => {\n        this.changeS(taskId, {title: title})\n    };\n\n    saveState = () => {\n        let stateAsString = JSON.stringify(this.state);\n        localStorage.setItem(\"ourState\", stateAsString)\n    };\n\n    render = () => {\n\n        return (\n            <div>\n                <div className={styles.wrapper}>\n                    <ToDoListHeader addTask={this.addTask}/>\n                    <ToDoListTasks\n                        removeTask={this.removeTask}\n                        changeTitle={this.changeTitle}\n                        changeStatus={this.changeStatus}\n                        changeS={this.changeS}\n                        tasks={this.state.tasks.filter((t: any) => {\n                            if (this.state.filterValue === \"All\") {\n                                return true;\n                            }\n                            if (this.state.filterValue === \"Active\") {\n                                return t.isDone === false;\n                            }\n                            if (this.state.filterValue === \"Completed\") {\n                                return t.isDone === true;\n                            }\n                        })}/>\n                    <ToDoListFooter filterValue={this.state.filterValue} changeFilter={this.changeFilter}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoList;\n","import React from 'react';\nimport styles from './Tuesday.module.css';\nimport ToDoList from \"./ToDoList/ToDoList\";\n\nclass Tuesday extends React.Component {\n    render = () => {\n        return (\n            <div className={styles.App}>\n                <ToDoList />\n            </div>\n        );\n    }\n}\nexport default Tuesday;\n","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport NavMenu from \"./NavMenu/NavMenu\";\nimport Monday from \"./Monday/Monday\";\nimport Tuesday from \"./Tuesday/Tuesday\";\n\ninterface IProps {\n    mySkills: Array<object>\n}\n\nfunction App(props: IProps) {\n    return (\n        <HashRouter>\n            <div>\n                <NavMenu/>\n            </div>\n            <Route path='/' exact render={() => <Monday mySkills={props.mySkills} />} />\n            <Route path='/Mon' exact render={() => <Monday mySkills={props.mySkills}/>}/>\n            <Route path='/Tue' exact render={() => <Tuesday/>}/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet me = [\n    {skill: 'кручу'},\n    {skill: 'верчу'},\n    {skill: 'запутать хочу'}\n];\n\nReactDOM.render(<App mySkills={me}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}