{"version":3,"sources":["NavMenu/NavMenu.module.css","Monday/Monday.module.css","Monday/MySkills/MySkills.module.css","Monday/HelloComponent/Hello.module.css","Monday/HelloComponent/InputComponent/InputComponent.module.css","App.module.css","Monday/MyName/MyName.module.css","Monday/HelloComponent/ListOfFriends/ListOfFriends.module.css","Monday/HelloComponent/PushButton/PushButton.module.css","NavMenu/NavMenu.tsx","Monday/MyName/MyName.tsx","Monday/MySkills/MySkills.tsx","Monday/HelloComponent/ListOfFriends/ListOfFriends.tsx","Monday/HelloComponent/PushButton/PushButton.tsx","Monday/HelloComponent/InputComponent/InputComponent.tsx","Monday/HelloComponent/Hello.tsx","Monday/Monday.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavMenu","state","days","id","isHidden","onClickColor","key","setState","render","links","map","i","href","onClick","className","styles","active","undefined","nav","React","Component","MyName","nameMas","colorMas","printMyName","myName","onMouseOver","c","style","color","Math","floor","random","length","MySkills","mySkills","props","item","skill","ListOfFriends","list","name","PushButton","onClickButton","button","InputComponent","error","title","onEnterPress","e","addNameFunc","newTitle","onEnterPush","onKeyPress","type","placeholder","onChange","currentTarget","value","inputError","input","setF","Hello","titleRef","createRef","names","f","onButtonClick","newName","alert","newMas","writeMyFriends","index","wrapper","friends","Monday","link","App","Name","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,IAAM,qBAAqB,OAAS,0B,gBCAtDD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,uB,gBCAnDD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,0B,gBCAhED,EAAOC,QAAU,CAAC,QAAU,uBAAuB,QAAU,yB,gBCA7DD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,qC,qBCArED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,oB,gBCAhDD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,8B,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,6B,8NCqCZC,E,2MAlCXC,MAAQ,CACJC,KAAM,CAAC,MAAO,OACdC,GAAI,EACJC,UAAU,G,EAGdC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVJ,GAAIG,K,EAIZE,OAAS,WAEL,IAAIC,EAAQ,EAAKR,MAAMC,KAAKQ,KAAI,SAACC,EAAGL,GAChC,OACI,uBACIA,IAAKA,EACLM,KAAM,KAAOD,EACbE,QAAS,kBAAM,EAAKR,aAAaC,IACjCQ,UAAW,EAAKb,MAAME,KAAOG,EAAMS,IAAOC,YAASC,GACrDN,MAGV,OACI,yBAAKG,UAAWC,IAAOG,MACjB,EAAKjB,MAAMG,UAAY,4BAAQS,QAAS,WAAK,EAAKN,SAAS,CAACH,UAAS,MAA9C,QACxB,EAAKH,MAAMG,UAAY,4BAAQS,QAAS,WAAK,EAAKN,SAAS,CAACH,UAAS,MAA9C,QACvB,EAAKH,MAAMG,UAAYK,I,6BA7BlBU,IAAMC,W,kCCyBbC,E,2MAxBXC,QAAU,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,IAAK,SAAK,SAAK,SAAK,SAAK,U,EACtFC,SAAW,CAAC,MAAO,SAAU,SAAU,QAAS,OAAQ,U,EACxDC,YAAc,WACV,EAAKjB,SAAS,K,EAGlBC,OAAS,WACL,OACI,yBAAKM,UAAWC,IAAOU,QAAvB,yCACI,uBAAGC,YAAa,EAAKF,aAChB,EAAKF,QAAQZ,KAAI,SAACiB,EAAGhB,GAAJ,OACd,0BACIL,IAAKK,EACLiB,MAAO,CAACC,MAAO,EAAKN,SAASO,KAAKC,MAAMD,KAAKE,SAAW,EAAKT,SAASU,WAErEN,S,6BAhBRR,IAAMC,W,iBCwBZc,E,2MAnBXC,SAAW,EAAKC,MAAMD,SAASzB,KAAI,SAAC2B,EAAW1B,GAC3C,OACI,yBAAKG,UAAWC,IAAOuB,MAClBhC,IAAKK,GAEL0B,EAAKC,U,EAIlB9B,OAAS,WAEL,OACI,yBAAKM,UAAWC,IAAOoB,UAClB,EAAKA,W,6BAdChB,IAAMC,W,0CCWdmB,E,2MATX/B,OAAS,WACL,OACI,0BAAMM,UAAWC,IAAOyB,MACnB,EAAKJ,MAAMK,O,6BALAtB,IAAMC,W,iBCSnBsB,E,2MAPXlC,OAAS,WACL,OACI,4BAAQK,QAAS,EAAKuB,MAAMO,cAAe7B,UAAWC,IAAO6B,QAA7D,S,6BAJazB,IAAMC,W,iBC6ChByB,E,YA1CX,WAAYT,GAAgB,IAAD,8BACvB,4CAAMA,KAGVnC,MAAQ,CACJ6C,OAAO,EACPC,MAAO,IANgB,EAS3BC,aAAe,SAACC,GACE,UAAVA,EAAE3C,KACF,EAAK4C,eAXc,EAe3BA,YAAc,WACV,IAAIC,EAAW,EAAKlD,MAAM8C,MAC1B,EAAKxC,SAAS,CAACwC,MAAO,KACG,KAArB,EAAK9C,MAAM8C,MACX,EAAKxC,SAAS,CAACuC,OAAO,KAEtB,EAAKvC,SAAS,CAACuC,OAAO,IACtB,EAAKV,MAAMgB,YAAYD,KAtBJ,EA0B3B3C,OAAS,WACL,OACI,2BACI6C,WAAY,EAAKL,aACjBM,KAAK,OACLC,YAAY,6EACZC,SAAU,SAACP,GACP,EAAK1C,SAAS,CAACuC,OAAO,EAAOC,MAAOE,EAAEQ,cAAcC,SAExD5C,UAAW,EAAKb,MAAM6C,MAAQ/B,IAAO4C,WAAa5C,IAAO6C,SAjCjExB,EAAMyB,KAAK,EAAKX,aAFO,E,2BADF/B,IAAMC,WCsCpB0C,E,2MAxCXC,SAAW5C,IAAM6C,Y,EACjB/D,MAAQ,CACJgE,MAAO,GACPC,EAAG,c,EAGPC,cAAgB,SAACC,GAGb,GAAgB,KAAZA,EACAC,MAAM,6EACH,CACHA,MAAM,mCAAYD,GAClB,IACIE,EAAM,CADe,CAAC7B,KAAM2B,IACtB,mBAAmB,EAAKnE,MAAMgE,QACxC,EAAK1D,SAAS,CAAC0D,MAAOK,M,EAI9BT,KAAO,SAACK,GAAkB,EAAK3D,SAAS,CAAC2D,O,EAEzC1D,OAAS,WACL,IAAI+D,EAAiB,EAAKtE,MAAMgE,MAAMvD,KAAI,SAACC,EAAQ6D,GAC/C,OAAO,0IAA0B,kBAAC,EAAD,CAAe/B,KAAM9B,EAAE8B,KAAMnC,IAAKkE,QAGvE,OACI,yBAAK1D,UAAWC,IAAO0D,SACnB,6BACI,kBAAC,EAAD,CAAgBV,SAAU,EAAKA,SAAUX,YAAa,EAAKe,cAAeN,KAAM,EAAKA,OACrF,kBAAC,EAAD,CAAYlB,cAAe,EAAK1C,MAAMiE,KAE1C,yBAAKpD,UAAWC,IAAO2D,SAClBH,K,6BAlCDpD,IAAMC,WCsBXuD,E,2MAjBf1E,MAAM,CACF2E,KAAM,I,EAENpE,OAAS,WAEL,OACI,yBAAKM,UAAWC,IAAO8D,KACnB,yBAAK/D,UAAWC,IAAO+D,MACnB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAU3C,SAAU,EAAKC,MAAMD,WAC/B,kBAAC,EAAD,Q,6BAZKhB,IAAMC,WCsBZyD,MAlBf,SAAazC,GACT,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAO2C,KAAK,IAAIC,OAAK,EAACxE,OAAQ,kBAAM,kBAAC,EAAD,CAAQ2B,SAAUC,EAAMD,cAC5D,kBAAC,IAAD,CAAO4C,KAAK,OAAOC,OAAK,EAACxE,OAAQ,kBAAM,kBAAC,EAAD,CAAQ2B,SAAUC,EAAMD,cAC/D,kBAAC,IAAD,CAAO4C,KAAK,OAAOvE,OAAQ,WACvB,OACI,yBAAKM,UAAWC,IAAO8D,KAAvB,gGCZAI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNNC,IAAS9E,OAAO,kBAAC,EAAD,CAAK2B,SANZ,CACL,CAACG,MAAO,kCACR,CAACA,MAAO,kCACR,CAACA,MAAO,gFAG0BiD,SAASC,eAAe,SD+HxD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjD,GACLkD,QAAQlD,MAAMA,EAAMmD,c","file":"static/js/main.4762b8f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__7l-PX\",\"active\":\"NavMenu_active__dvDC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Monday_App__Qa8vm\",\"Name\":\"Monday_Name__3_jhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySkills\":\"MySkills_mySkills__2QL7I\",\"skill\":\"MySkills_skill__ac7rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Hello_wrapper__1695F\",\"friends\":\"Hello_friends__U8Cgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputComponent_input__3sYg5\",\"inputError\":\"InputComponent_inputError__1QMeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16Hvb\",\"Name\":\"App_Name__3IrLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myName\":\"MyName_myName__2h04n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListOfFriends_list__yzDuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PushButton_button__1wUoZ\"};","import React from 'react';\nimport styles from './NavMenu.module.css';\n\nclass NavMenu extends React.Component {\n    state = {\n        days: ['Mon', 'Tue'],\n        id: 0,\n        isHidden: true,\n    };\n\n    onClickColor = (key: number) => {\n        this.setState({\n            id: key\n        })\n    };\n\n    render = () => {\n\n        let links = this.state.days.map((i, key) => {\n            return (\n                <a\n                    key={key}\n                    href={\"#/\" + i}\n                    onClick={() => this.onClickColor(key)}\n                    className={this.state.id === key ? styles.active : undefined}\n                >{i}</a>\n            )\n        });\n        return (\n            <div className={styles.nav}>\n                {!this.state.isHidden && <button onClick={()=>{this.setState({isHidden:true})}} >Days</button>}\n                {this.state.isHidden && <button onClick={()=>{this.setState({isHidden:false})}} >Hide</button>}\n                {this.state.isHidden && links}\n            </div>\n        );\n    }\n}\n\nexport default NavMenu;\n","import React from 'react';\nimport styles from './MyName.module.css';\n\nclass MyName extends React.Component {\n    nameMas = [\"Г\", \"а\", \"в\", \"р\", \"и\", \"л\", \"е\", \"н\", \"к\", \"о\", \" \", \"А\", \"н\", \"т\", \"о\", \"н\",];\n    colorMas = [\"red\", \"orange\", \"violet\", \"green\", \"blue\", \"purple\"];\n    printMyName = () => {\n        this.setState({});\n    };\n\n    render = () => {\n        return (\n            <div className={styles.myName}>Дароу, я\n                <p onMouseOver={this.printMyName}>\n                    {this.nameMas.map((c, i) => (\n                        <span\n                            key={i}\n                            style={{color: this.colorMas[Math.floor(Math.random() * this.colorMas.length)]}}\n                        >\n                            {c}\n                        </span>\n                    ))}\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default MyName;\n","import React from 'react';\nimport styles from './MySkills.module.css';\n\ninterface IProps {\n    mySkills: Array<object>\n}\n\nclass MySkills extends React.Component<IProps> {\n    mySkills = this.props.mySkills.map((item: any, i) => {\n        return (\n            <div className={styles.skill}\n                 key={i}\n            >\n                {item.skill}\n            </div>\n        )\n    });\n    render = () => {\n\n        return (\n            <div className={styles.mySkills}>\n                {this.mySkills}\n            </div>\n        );\n    }\n}\n\nexport default MySkills;\n","import React from 'react';\nimport styles from './ListOfFriends.module.css';\n\ninterface IProps {\n    name: string\n}\n\nclass ListOfFriends extends React.Component<IProps> {\n\n    render = () => {\n        return (\n            <span className={styles.list}>\n                {this.props.name}\n            </span>\n        );\n    }\n}\n\nexport default ListOfFriends;\n","import React from 'react';\nimport styles from './PushButton.module.css';\n\ninterface IProps {\n    onClickButton: any\n}\n\nclass PushButton extends React.Component<IProps> {\n\n    render = () => {\n        return (\n            <button onClick={this.props.onClickButton} className={styles.button}>Push</button>\n        );\n    }\n}\n\nexport default PushButton;\n","import React from 'react';\nimport styles from './InputComponent.module.css';\n\ninterface IProps {\n    titleRef: any,\n    onEnterPush: any,\n    setF: (f: () => void) => void\n}\n\nclass InputComponent extends React.Component<IProps> {\n    constructor(props: IProps) {\n        super(props);\n        props.setF(this.addNameFunc)\n    }\n    state = {\n        error: false,\n        title: \"\",\n    };\n\n    onEnterPress = (e: any) => {\n        if (e.key === \"Enter\") {\n            this.addNameFunc();\n        }\n    };\n\n    addNameFunc = () => {\n        let newTitle = this.state.title;\n        this.setState({title: \"\"});\n        if (this.state.title === \"\") {\n            this.setState({error: true})\n        } else {\n            this.setState({error: false})\n            this.props.onEnterPush(newTitle)\n        }\n    }\n\n    render = () => {\n        return (\n            <input\n                onKeyPress={this.onEnterPress}\n                type=\"text\"\n                placeholder=\"Введи свое имя\"\n                onChange={(e) => {\n                    this.setState({error: false, title: e.currentTarget.value})\n                }}\n                className={this.state.error ? styles.inputError : styles.input}\n\n            />\n        );\n    }\n}\n\nexport default InputComponent;\n","import React from 'react';\nimport styles from './Hello.module.css';\nimport ListOfFriends from \"./ListOfFriends/ListOfFriends\";\nimport PushButton from \"./PushButton/PushButton\";\nimport InputComponent from \"./InputComponent/InputComponent\";\n\nclass Hello extends React.Component {\n    titleRef = React.createRef<HTMLInputElement>();\n    state = {\n        names: [],\n        f: () => {}\n\n    };\n    onButtonClick = (newName: any) => {\n        // let inputValue: string = this.titleRef.current ? this.titleRef.current.value : '';\n        // if (this.titleRef.current) this.titleRef.current.value = '';\n        if (newName === '') {\n            alert(\"Бро, введи имя\");\n        } else {\n            alert(\"Дароу, \" + newName);\n            let newNameBro: object = {name: newName};\n            let newMas = [newNameBro, ...this.state.names];\n            this.setState({names: newMas});\n        }\n    };\n\n    setF = (f: () => void) =>{this.setState({f})};\n\n    render = () => {\n        let writeMyFriends = this.state.names.map((i: any, index: number) => {\n            return <div>К нам присоединился: <ListOfFriends name={i.name} key={index}/></div>\n        });\n\n        return (\n            <div className={styles.wrapper}>\n                <div>\n                    <InputComponent titleRef={this.titleRef} onEnterPush={this.onButtonClick} setF={this.setF}/>\n                    <PushButton onClickButton={this.state.f}/>\n                </div>\n                <div className={styles.friends}>\n                    {writeMyFriends}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Hello;\n","import React from 'react';\nimport styles from './Monday.module.css';\nimport MyName from \"./MyName/MyName\";\nimport MySkills from \"./MySkills/MySkills\";\nimport Hello from \"./HelloComponent/Hello\";\n\ninterface IProps {\nmySkills: any\n}\n\nclass Monday extends React.Component<IProps> {\nstate={\n    link: \"\"\n}\n    render = () => {\n\n        return (\n            <div className={styles.App}>\n                <div className={styles.Name}>\n                    <MyName/>\n                </div>\n                <MySkills mySkills={this.props.mySkills}/>\n                <Hello/>\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n","import React from 'react';\nimport styles from './App.module.css';\nimport MySkills from \"./Monday/MySkills/MySkills\";\nimport MyName from \"./Monday/MyName/MyName\";\nimport Hello from \"./Monday/HelloComponent/Hello\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport NavMenu from \"./NavMenu/NavMenu\";\nimport Monday from \"./Monday/Monday\";\n\n\ninterface IProps {\n    mySkills: Array<object>\n}\n\nfunction App(props: IProps) {\n    return (\n        <HashRouter>\n            <div>\n                <NavMenu/>\n            </div>\n            <Route path='/' exact render={() => <Monday mySkills={props.mySkills} />} />\n            <Route path='/Mon' exact render={() => <Monday mySkills={props.mySkills}/>}/>\n            <Route path='/Tue' render={() => {\n                return (\n                    <div className={styles.App}>\n                        Тут пока ниче нет\n                    </div>)\n            }}/>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet me = [\n    {skill: 'кручу'},\n    {skill: 'верчу'},\n    {skill: 'запутать хочу'}\n];\n\nReactDOM.render(<App mySkills={me}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}