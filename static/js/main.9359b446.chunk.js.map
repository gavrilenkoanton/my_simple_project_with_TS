{"version":3,"sources":["Tuesday/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.module.css","Tuesday/ToDoList/ToDoListFooter/ToDoListFooter.module.css","NavMenu/NavMenu.module.css","Monday/Monday.module.css","Monday/MySkills/MySkills.module.css","Monday/HelloComponent/Hello.module.css","Monday/HelloComponent/InputComponent/InputComponent.module.css","Monday/MyName/MyName.module.css","Monday/HelloComponent/ListOfFriends/ListOfFriends.module.css","Monday/HelloComponent/PushButton/PushButton.module.css","img/preloader.gif","Tuesday/Tuesday.module.css","Tuesday/ToDoList/ToDoList.module.css","Tuesday/ToDoList/ToDoListHeader/ToDoListHeader.module.css","Wednesday/Wednesday.module.css","NavMenu/NavMenu.tsx","Monday/MyName/MyName.tsx","Monday/MySkills/MySkills.tsx","Monday/HelloComponent/ListOfFriends/ListOfFriends.tsx","Monday/HelloComponent/PushButton/PushButton.tsx","Monday/HelloComponent/InputComponent/InputComponent.tsx","Monday/HelloComponent/Hello.tsx","Monday/Monday.tsx","Tuesday/ToDoList/ToDoListHeader/ToDoListHeader.tsx","Tuesday/ToDoList/ToDoListFooter/ToDoListFooter.tsx","Tuesday/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.tsx","Tuesday/ToDoList/ToDoListTasks/ToDoListTasks.tsx","restoreState.js","Tuesday/ToDoList/ToDoList.tsx","Tuesday/Tuesday.tsx","redux/monday-reducer.js","Wednesday/Wednesday.tsx","redux/settings-reducer.js","App.tsx","serviceWorker.ts","redux/redux-store.js","index.tsx"],"names":["module","exports","NavMenu","state","days","id","isHidden","onClickColor","key","setState","render","links","map","i","href","onClick","className","styles","active","undefined","nav","React","Component","MyName","nameMas","colorMas","printMyName","myName","onMouseOver","c","style","color","Math","floor","random","length","MySkills","mySkills","props","item","skill","ListOfFriends","list","name","PushButton","onClickButton","button","InputComponent","error","title","onEnterPress","e","addNameFunc","newTitle","onEnterPush","onKeyPress","type","placeholder","onChange","currentTarget","value","inputError","input","setF","Hello","titleRef","createRef","names","f","onButtonClick","newName","alert","newMas","writeMyFriends","index","wrapper","friends","Monday","link","App","monday","isLoading","src","preloader","Name","me","this","loading","setTimeout","ToDoListHeader","addTaskClick","newText","addTask","onPressEnterAddTask","ToDoListFooter","classForAll","filterValue","filterActive","classForCompleted","classForActive","changeFilter","TodoListTask","editMode","cloudShow","activatedEditMode","deactivatedEditMode","onIsDoneChanged","newDate","Date","toString","slice","changeStatus","checked","onTitleChanged","changeTitle","onChangePriority","changePriority","show","task","isDone","toDoListTaskDone","autoFocus","onBlur","onMouseOut","priority","removeTask","cloud","cloudHide","created","updated","finished","ToDoListTasks","tasksElements","tasks","dateUpdater","RestoreState","stateAsString","localStorage","getItem","JSON","parse","ToDoList","nextTaskId","newTaskTitle","createdDate","newTask","console","log","newTasks","saveState","newFilterValue","changeS","taskId","t","dateChanger","date","newList","filter","newDate3","stringify","setItem","LocalStr","forEach","Tuesday","initialState","mondayReducer","action","Wednesday","settings","changeStyle","settingsReducer","connect","dispatch","path","exact","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9359b446.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoListTaskDone\":\"ToDoListTask_toDoListTaskDone__2QLLJ\",\"priority\":\"ToDoListTask_priority__1qLQE\",\"cloud\":\"ToDoListTask_cloud__1h_Od\",\"cloudHide\":\"ToDoListTask_cloudHide__2aLK5\",\"input\":\"ToDoListTask_input__23yqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"ToDoListFooter_filterActive__3AYpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__7l-PX\",\"active\":\"NavMenu_active__dvDC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Monday_App__Qa8vm\",\"Name\":\"Monday_Name__3_jhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySkills\":\"MySkills_mySkills__2QL7I\",\"skill\":\"MySkills_skill__ac7rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Hello_wrapper__1695F\",\"friends\":\"Hello_friends__U8Cgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputComponent_input__3sYg5\",\"inputError\":\"InputComponent_inputError__1QMeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myName\":\"MyName_myName__2h04n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListOfFriends_list__yzDuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PushButton_button__1wUoZ\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d01db4ec.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Tuesday_App__1TQct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ToDoList_wrapper__1bKnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ToDoListHeader_error__2waPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"Wednesday_light__2s4pw\",\"dark\":\"Wednesday_dark__4AHdY\"};","import React from 'react';\nimport styles from './NavMenu.module.css';\n\nclass NavMenu extends React.Component {\n    state = {\n        days: ['Mon', 'Tue', 'Wed'],\n        id: 0,\n        isHidden: true,\n    };\n\n    onClickColor = (key: number) => {\n        this.setState({\n            id: key\n        })\n    };\n\n    render = () => {\n\n        let links = this.state.days.map((i, key) => {\n            return (\n                <a\n                    key={key}\n                    href={\"#/\" + i}\n                    onClick={() => this.onClickColor(key)}\n                    className={this.state.id === key ? styles.active : undefined}\n                >{i}</a>\n            )\n        });\n        return (\n            <div className={styles.nav}>\n                {!this.state.isHidden && <button onClick={()=>{this.setState({isHidden:true})}} >Days</button>}\n                {this.state.isHidden && <button onClick={()=>{this.setState({isHidden:false})}} >Hide</button>}\n                {this.state.isHidden && links}\n            </div>\n        );\n    }\n}\n\nexport default NavMenu;\n","import React from 'react';\nimport styles from './MyName.module.css';\n\nclass MyName extends React.Component {\n    nameMas = [\"Г\", \"а\", \"в\", \"р\", \"и\", \"л\", \"е\", \"н\", \"к\", \"о\", \" \", \"А\", \"н\", \"т\", \"о\", \"н\",];\n    colorMas = [\"red\", \"orange\", \"violet\", \"green\", \"blue\", \"purple\"];\n    printMyName = () => {\n        this.setState({});\n    };\n\n    render = () => {\n        return (\n            <div className={styles.myName}>Дароу, я\n                <p onMouseOver={this.printMyName}>\n                    {this.nameMas.map((c, i) => (\n                        <span\n                            key={i}\n                            style={{color: this.colorMas[Math.floor(Math.random() * this.colorMas.length)]}}\n                        >\n                            {c}\n                        </span>\n                    ))}\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default MyName;\n","import React from 'react';\nimport styles from './MySkills.module.css';\n\ninterface IProps {\n    mySkills: Array<object>\n}\n\nclass MySkills extends React.Component<IProps> {\n    mySkills = this.props.mySkills.map((item: any, i) => {\n        return (\n            <div className={styles.skill}\n                 key={i}\n            >\n                {item.skill}\n            </div>\n        )\n    });\n    render = () => {\n\n        return (\n            <div className={styles.mySkills}>\n                {this.mySkills}\n            </div>\n        );\n    }\n}\n\nexport default MySkills;\n","import React from 'react';\nimport styles from './ListOfFriends.module.css';\n\ninterface IProps {\n    name: string\n}\n\nclass ListOfFriends extends React.Component<IProps> {\n\n    render = () => {\n        return (\n            <span className={styles.list}>\n                {this.props.name}\n            </span>\n        );\n    }\n}\n\nexport default ListOfFriends;\n","import React from 'react';\nimport styles from './PushButton.module.css';\n\ninterface IProps {\n    onClickButton: any\n}\n\nclass PushButton extends React.Component<IProps> {\n\n    render = () => {\n        return (\n            <button onClick={this.props.onClickButton} className={styles.button}>Push</button>\n        );\n    }\n}\n\nexport default PushButton;\n","import React from 'react';\nimport styles from './InputComponent.module.css';\n\ninterface IProps {\n    titleRef: any,\n    onEnterPush: any,\n    setF: (f: () => void) => void\n}\n\nclass InputComponent extends React.Component<IProps> {\n    constructor(props: IProps) {\n        super(props);\n        props.setF(this.addNameFunc)\n    }\n    state = {\n        error: false,\n        title: \"\",\n    };\n\n    onEnterPress = (e: any) => {\n        if (e.key === \"Enter\") {\n            this.addNameFunc();\n        }\n    };\n\n    addNameFunc = () => {\n        let newTitle = this.state.title;\n        this.setState({title: \"\"});\n        if (this.state.title === \"\") {\n            this.setState({error: true})\n        } else {\n            this.setState({error: false})\n            this.props.onEnterPush(newTitle)\n        }\n    }\n\n    render = () => {\n        return (\n            <input\n                onKeyPress={this.onEnterPress}\n                type=\"text\"\n                placeholder=\"Введи свое имя\"\n                onChange={(e) => {\n                    this.setState({error: false, title: e.currentTarget.value})\n                }}\n                className={this.state.error ? styles.inputError : styles.input}\n\n            />\n        );\n    }\n}\n\nexport default InputComponent;\n","import React from 'react';\nimport styles from './Hello.module.css';\nimport ListOfFriends from \"./ListOfFriends/ListOfFriends\";\nimport PushButton from \"./PushButton/PushButton\";\nimport InputComponent from \"./InputComponent/InputComponent\";\n\nclass Hello extends React.Component {\n    titleRef = React.createRef<HTMLInputElement>();\n    state = {\n        names: [],\n        f: () => {}\n\n    };\n    onButtonClick = (newName: any) => {\n        // let inputValue: string = this.titleRef.current ? this.titleRef.current.value : '';\n        // if (this.titleRef.current) this.titleRef.current.value = '';\n        if (newName === '') {\n            alert(\"Бро, введи имя\");\n        } else {\n            alert(\"Дароу, \" + newName);\n            let newNameBro: object = {name: newName};\n            let newMas = [newNameBro, ...this.state.names];\n            this.setState({names: newMas});\n        }\n    };\n\n    setF = (f: () => void) =>{this.setState({f})};\n\n    render = () => {\n        let writeMyFriends = this.state.names.map((i: any, index: number) => {\n            return <div>К нам присоединился: <ListOfFriends name={i.name} key={index}/></div>\n        });\n\n        return (\n            <div className={styles.wrapper}>\n                <div>\n                    <InputComponent titleRef={this.titleRef} onEnterPush={this.onButtonClick} setF={this.setF}/>\n                    <PushButton onClickButton={this.state.f}/>\n                </div>\n                <div className={styles.friends}>\n                    {writeMyFriends}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Hello;\n","import React from 'react';\nimport styles from './Monday.module.css';\nimport MyName from \"./MyName/MyName\";\nimport MySkills from \"./MySkills/MySkills\";\nimport Hello from \"./HelloComponent/Hello\";\nimport preloader from \"../img/preloader.gif\";\n\ninterface IProps {\n    monday: any,\n    loading: any\n}\n\nclass Monday extends React.Component<IProps> {\n    state = {\n        link: \"\"\n    };\n\n    componentDidMount(): void {\n        this.props.loading(true);\n        setTimeout(() => {\n            this.props.loading(false)\n        }, 3000)\n    }\n\n    render = () => {\n\n\n        return (\n            <div className={styles.App}>\n                {this.props.monday.isLoading\n                    ? <img src={preloader}/>\n                    : <>\n                        <div className={styles.Name}>\n                            <MyName/>\n                        </div>\n                        <MySkills mySkills={this.props.monday.me}/>\n                        <Hello/>\n                    </>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n","import React from 'react';\nimport styles from './ToDoListHeader.module.css';\n\ninterface IProps {\n    addTask: any;\n}\n\nclass ToDoListHeader extends React.Component<IProps> {\n\n    state = {\n        error: false,\n        title: \"\",\n    };\n\n    addTaskClick = () => {\n        let newText = this.state.title;\n        this.setState({title: \"\"});\n        if (newText === \"\") {\n            this.setState({error: true})\n        } else {\n            this.setState({error: false})\n            this.props.addTask(newText)\n        }\n    };\n\n    onPressEnterAddTask = (e: any) => {\n        if (e.key === \"Enter\") {\n            this.addTaskClick();\n        }\n    };\n    render = () => {\n        return (\n            <div>\n                <div>\n                    <h3>Список дел:</h3>\n                    <div>\n                        <input onKeyPress={this.onPressEnterAddTask}\n                               onChange={(e) => {\n                                   this.setState({error: false, title: e.currentTarget.value})\n                               }}\n                               className={this.state.error ? styles.error : \"\"}\n                               type=\"text\"\n                               placeholder=\"Че будем делать?\"\n                               value={this.state.title}\n                        />\n                        <button onClick={this.addTaskClick}>Add</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoListHeader;\n","import React from 'react';\nimport styles from './ToDoListFooter.module.css';\n\ninterface IProps {\nfilterValue: string;\nchangeFilter: any;\n}\n\nclass ToDoListFooter extends React.Component<IProps> {\n\n    state = {\n        isHidden: true,\n    };\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? styles.filterActive : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? styles.filterActive : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? styles.filterActive : \"\";\n\n        return (\n            <div>\n                <div className=\"todoList\">\n                    <div className=\"todoList-footer\">\n                        {!this.state.isHidden &&  <div>\n                            <button className={classForAll} onClick={() => {\n                                this.props.changeFilter(\"All\")\n                            }}>All\n                            </button>\n                            <button className={classForCompleted} onClick={() => {\n                                this.props.changeFilter(\"Completed\")\n                            }}>Completed\n                            </button>\n                            <button className={classForActive} onClick={() => {\n                                this.props.changeFilter(\"Active\")\n                            }}>Active\n                            </button>\n                        </div>}\n                        {!this.state.isHidden && <span onClick={()=>{this.setState({isHidden: true})}}>Hide</span>}\n                        {this.state.isHidden && <span onClick={()=>{this.setState({isHidden: false})}}>Show</span>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoListFooter;\n","import React from 'react';\nimport styles from './ToDoListTask.module.css';\n\ninterface IProps {\n    id: number;\n    title: string;\n    isDone: boolean;\n    priority: string;\n    task: any;\n    changeStatus: any;\n    changeTitle: any;\n    removeTask: any;\n    dateUpdater: any;\n    changePriority: any;\n    created: any;\n    updated: any\n    finished: string\n}\n\nclass TodoListTask extends React.Component<IProps> {\n\n    state = {\n        editMode: false,\n        cloudShow: false\n    };\n\n    activatedEditMode = () => {\n        this.setState({editMode: true})\n    };\n    deactivatedEditMode = () => {\n        this.setState({editMode: false})\n    };\n\n    onIsDoneChanged = (e: any) => {\n        let newDate = (new Date()).toString().slice(0, -46);\n        this.props.changeStatus(this.props.id, e.currentTarget.checked, newDate)\n\n    };\n    onTitleChanged = (e: any) => {\n        let newDate = (new Date()).toString().slice(0, -46);\n        this.props.changeTitle(this.props.id, e.currentTarget.value, newDate)\n        // this.props.dateUpdater(this.props.id)\n    };\n\n    onChangePriority = (e: any) => {\n        this.props.changePriority(this.props.id, e.currentTarget.value)\n    };\n    cloudShow = (show: boolean) => {\n        this.setState({cloudShow: show})\n    };\n\n    render = () => {\n        return (\n            <div>\n                <div className={this.props.task.isDone ? styles.toDoListTaskDone : \"\"}>\n\n                    <input type=\"checkbox\"\n                           checked={this.props.task.isDone}\n                           onChange={this.onIsDoneChanged}\n                    />\n                    <span>{this.props.id} - </span>\n                    {this.state.editMode\n                        ? <input\n                            onChange={this.onTitleChanged}\n                            autoFocus={true}\n                            value={this.props.task.title}\n                            onBlur={this.deactivatedEditMode}\n                        />\n                        : <span onClick={this.activatedEditMode}\n                               className={styles.input}\n                               onMouseOut={() => {\n                                   this.cloudShow(false)\n                               }}\n                               onMouseOver={() => {\n                                   this.cloudShow(true)\n                               }}>\n                        {this.props.title}\n                         </span>\n                    }\n                    <span>  priority: {this.props.priority}</span>\n                    <span className={styles.priority}>Изменить приоритет: <select name=\"\" id=\"\"\n                                                                                  onChange={this.onChangePriority}>\n                    <option value=\"low\">low</option>\n                    <option value=\"medium\">medium</option>\n                    <option value=\"high\">high</option>\n                </select>\n                </span>\n\n                    <button onClick={() => {\n                        this.props.removeTask(this.props.id)\n                    }}>X\n                    </button>\n                </div>\n                <div className={this.state.cloudShow ? styles.cloud : styles.cloudHide}>\n                    <div>Создан: {this.props.created}</div>\n                    <div>Изменен: {this.props.updated}</div>\n                    <div>Завершен: {this.props.finished}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport TodoListTask from \"./ToDoListTask/ToDoListTask\";\n// import styles from './ToDoList.module.css';\n\ninterface IProps {\n    changeTitle: any;\n    changeStatus: any;\n    changePriority: any;\n    changeS: any;\n    tasks: Array<string>;\n    removeTask: any;\n    dateUpdater: any\n}\n\nclass ToDoListTasks extends React.Component<IProps> {\n\n    render = () => {\n        let tasksElements = this.props.tasks.map((item: any) => {\n            return (\n                <TodoListTask task={item}\n                              id={item.id}\n                              title={item.title}\n                              isDone={item.isDone}\n                              priority={item.priority}\n                              created={item.created}\n                              updated={item.updated}\n                              finished={item.finished}\n                              changeStatus={this.props.changeStatus}\n                              changeTitle={this.props.changeTitle}\n                              removeTask={this.props.removeTask}\n                              changePriority={this.props.changePriority}\n                              dateUpdater={this.props.dateUpdater}\n                />\n            )\n        });\n        return (\n            <div>\n                {tasksElements}\n            </div>\n        );\n    }\n}\n\nexport default ToDoListTasks;\n\n","import React from \"react\";\r\n\r\nconst RestoreState =\r\n     ()=> {\r\n         let state = {\r\n             tasks: [],\r\n             filterValue: \"All\"\r\n         };\r\n         let stateAsString = localStorage.getItem(\"ourState\");\r\n         if (stateAsString != null) {\r\n             state = JSON.parse(stateAsString);\r\n         }\r\n       return state;\r\n\r\n     };\r\n export default RestoreState;","import React from 'react';\nimport styles from './ToDoList.module.css';\nimport ToDoListHeader from \"./ToDoListHeader/ToDoListHeader\";\nimport ToDoListFooter from \"./ToDoListFooter/ToDoListFooter\";\nimport ToDoListTasks from \"./ToDoListTasks/ToDoListTasks\";\nimport RestoreState from \"../../restoreState\";\nimport {log} from \"util\";\n\nclass ToDoList extends React.Component {\n\n    componentDidMount() {\n        let LocalStr: any = RestoreState;\n        this.setState(LocalStr, () => {\n            this.state.tasks.forEach((t: any) => {\n                if (t.id >= this.nextTaskId) {\n                    this.nextTaskId = t.id + 1\n                }\n            })\n        })\n    };\n\n    nextTaskId = 1;\n\n    state = {\n        tasks: [] as any,\n        filterValue: \"All\"\n    };\n\n    addTask = (newTaskTitle: string) => {\n        let createdDate = (new Date()).toString().slice(0,-46);\n        let newTask = {\n            id: this.nextTaskId,\n            title: newTaskTitle,\n            isDone: false,\n            priority: 'low',\n            created: createdDate,\n            updated: \"\",\n            finished: \"\"\n        };\n        this.nextTaskId++;\n        console.log(newTask.created)\n        let newTasks = [newTask, ...this.state.tasks];\n        this.setState({\n            tasks: newTasks\n        }, this.saveState);\n    };\n\n    changeFilter = (newFilterValue: string) => {\n        this.setState({\n            filterValue: newFilterValue\n        })\n    };\n\n    changeS = (taskId: number, value: object) => {\n        let newTask = this.state.tasks.map((t: any) => {\n            if (t.id === taskId) {\n                return {...t, ...value};\n            } else {\n                return t\n            }\n        });\n        this.setState({\n            tasks: newTask\n        }, this.saveState)\n    };\n    dateChanger = (taskId: number, value: object, date: object) => {\n        let newTask = this.state.tasks.map((t: any) => {\n            if (t.id === taskId) {\n                return {\n                    ...t,\n                    ...value,\n                    ...date\n                };\n            } else {\n                return t\n            }\n        });\n        this.setState({\n            tasks: newTask\n        }, this.saveState)\n    };\n\n    removeTask = (taskId: number) => {\n        let newList = this.state.tasks.filter((t: any) => t.id !== taskId)\n        this.setState({tasks: newList}, this.saveState)\n    };\n\n    changeStatus = (taskId: number, isDone: boolean, date: string) => {\n\nif(isDone){\n    this.dateChanger(taskId, {isDone: isDone}, {finished: date})\n}else{\n    this.dateChanger(taskId, {isDone: isDone}, {finished: \"\"})\n}\n\n    };\n    changeTitle = (taskId: number, title: object, date: string) => {\n        this.dateChanger(taskId, {title: title}, {updated: date});\n    };\n    dateUpdater = (taskId: number) => {\n        let newDate = new Date();\n        let newDate2 = newDate.toString();\n        let newDate3 = newDate2.slice(0, -46);\n        this.changeS(taskId, {updated: newDate3})\n    };\n    changePriority = (taskId: number, title: object) => {\n        this.changeS(taskId, {priority: title})\n    };\n\n    saveState = () => {\n        let stateAsString = JSON.stringify(this.state);\n        localStorage.setItem(\"ourState\", stateAsString)\n    };\n\n    render = () => {\n\n        return (\n            <div>\n                <div className={styles.wrapper}>\n                    <ToDoListHeader addTask={this.addTask}/>\n                    <ToDoListTasks\n                        removeTask={this.removeTask}\n                        changeTitle={this.changeTitle}\n                        changeStatus={this.changeStatus}\n                        changePriority={this.changePriority}\n                        dateUpdater={this.dateUpdater}\n                        changeS={this.changeS}\n                        tasks={this.state.tasks.filter((t: any) => {\n                            if (this.state.filterValue === \"All\") {\n                                return true;\n                            }\n                            if (this.state.filterValue === \"Active\") {\n                                return t.isDone === false;\n                            }\n                            if (this.state.filterValue === \"Completed\") {\n                                return t.isDone === true;\n                            }\n                        })}/>\n                    <ToDoListFooter filterValue={this.state.filterValue} changeFilter={this.changeFilter}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoList;\n","import React from 'react';\nimport styles from './Tuesday.module.css';\nimport ToDoList from \"./ToDoList/ToDoList\";\n\nclass Tuesday extends React.Component {\n    render = () => {\n        return (\n            <div className={styles.App}>\n                <ToDoList />\n            </div>\n        );\n    }\n}\nexport default Tuesday;\n","const LOADING = 'LOADING';\r\n\r\n\r\nlet initialState = {\r\n\r\n    me: [\r\n        {skill: 'кручу'},\r\n        {skill: 'верчу'},\r\n        {skill: 'запутать хочу'}\r\n    ],\r\n    isLoading: true\r\n};\r\n\r\nconst mondayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const loadingAC = (isLoading) => {\r\n    return {\r\n        type: LOADING, isLoading\r\n    };\r\n};\r\n\r\n\r\nexport default mondayReducer;","import React from 'react';\nimport styles from './Wednesday.module.css';\n\n\ninterface IProps {\n    settings: any\n    changeStyle: any\n}\n\nclass Wednesday extends React.Component<IProps> {\n\n\n    render = () => {\n        return (\n            <div className={styles[this.props.settings.style]}>\n                <div><input type=\"radio\" name=\"theme\"\n\n                            value=\"light\" onClick={() => {\n                    this.props.changeStyle(\"light\")\n                }}/>Light\n                </div>\n                <div><input type=\"radio\" name=\"theme\" value=\"dark\" onClick={() => {\n                    this.props.changeStyle(\"dark\")\n                }}/>Dark\n                </div>\n                <div>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium aliquid dignissimos expedita\n                    illo impedit iusto provident quos ullam. Asperiores corporis est eum laudantium nobis quibusdam\n                    quidem quis rem, sed voluptate!\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Wednesday;\n","const CHANGE_STYLE = 'CHANGE_STYLE';\r\n\r\n\r\nlet initialState = {\r\n\r\n    style: \"light\"\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_STYLE:\r\n            return {\r\n                ...state,\r\n                style: action.style\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const changeStyleAC = (style) => {\r\n    return {\r\n        type: CHANGE_STYLE, style\r\n    };\r\n};\r\n\r\n\r\nexport default settingsReducer;","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport NavMenu from \"./NavMenu/NavMenu\";\nimport Monday from \"./Monday/Monday\";\nimport Tuesday from \"./Tuesday/Tuesday\";\nimport {connect} from \"react-redux\";\nimport {loadingAC} from \"./redux/monday-reducer\";\nimport Wednesday from \"./Wednesday/Wednesday\";\nimport {changeStyleAC} from \"./redux/settings-reducer\";\n\ninterface IProps {\n    monday: object,\n    loading: any\n    settings: any\n    changeStyle: any\n}\n\nfunction App(props: IProps) {\n    return (\n        <HashRouter>\n            <div>\n                <NavMenu/>\n            </div>\n            <Route path='/' exact render={() => <Monday monday={props.monday} loading={props.loading}/>}/>\n            <Route path='/Mon' exact render={() => <Monday monday={props.monday} loading={props.loading}/>}/>\n            <Route path='/Tue' exact render={() => <Tuesday/>}/>\n            <Route path='/Wed' exact render={() => <Wednesday settings={props.settings} changeStyle={props.changeStyle}/>}/>\n        </HashRouter>\n    );\n}\n\nlet mstp = (state: any) => {\n    return {\n        monday: state.monday,\n        settings: state.settings\n    }\n};\n\nlet mdtp = (dispatch: any) => {\n    return {\n        loading: (loading: boolean) => {\n            dispatch(loadingAC(loading))\n        },\n        changeStyle: (color: string)=>{\n            dispatch(changeStyleAC(color))\n        }\n    }\n}\n\nexport default connect(mstp, mdtp)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport mondayReducer from \"./monday-reducer\";\r\nimport settingsReducer from \"./settings-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    settings: settingsReducer,\r\n    monday: mondayReducer\r\n\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\n\n//\n// let me = [\n//     {skill: 'кручу'},\n//     {skill: 'верчу'},\n//     {skill: 'запутать хочу'}\n// ];\n\nReactDOM.render(\n\n    <Provider store={store}>\n    <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}